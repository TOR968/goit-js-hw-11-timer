{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","document","querySelector","Date","intervalId","setInterval","currentTime","remainingTime","timeCounter","insertTimeIntoMarckup","stopCountdown","days","Math","floor","hours","mins","secs","refs","minutes","seconds","textContent","pad","clearInterval","value","String","padStart","countdownTimer","startCountdown"],"mappings":";AAiDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjDMA,IAAAA,EAAAA,WACQC,SAAAA,EAAAA,EAAUC,GAAY,EAAA,KAAA,GAC3BD,KAAAA,SAAWE,SAASC,cAAcH,GAClCC,KAAAA,WAAa,IAAIG,KAAKH,GA8C/B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,iBA3CmB,MAAA,WAAA,IAAA,EAAA,KACVI,KAAAA,WAAaC,YAAY,WAC5B,EAAKC,YAAc,IAAIH,KACvB,EAAKI,cAAgB,EAAKP,WAAa,EAAKM,YAC5C,EAAKE,cAAe,EAAKC,wBACrB,EAAKF,cAAgB,GACvB,EAAKG,iBAEN,OAmCP,CAAA,IAAA,cAhCgB,MAAA,WACPC,KAAAA,KAAOC,KAAKC,MAAM,KAAKN,cAAiB,OACxCO,KAAAA,MAAQF,KAAKC,MAAO,KAAKN,cAAiB,MAAyB,MACnEQ,KAAAA,KAAOH,KAAKC,MAAO,KAAKN,cAAiB,KAAoB,KAC7DS,KAAAA,KAAOJ,KAAKC,MAAO,KAAKN,cAAiB,IAAc,OA4BhE,CAAA,IAAA,wBAzB0B,MAAA,WACjBU,KAAAA,KAAO,CACVN,KAAMV,SAASC,cAAc,sBAC7BY,MAAOb,SAASC,cAAc,uBAC9BgB,QAASjB,SAASC,cAAc,sBAChCiB,QAASlB,SAASC,cAAc,uBAE7Be,KAAAA,KAAKN,KAAKS,YAAc,KAAKC,IAAI,KAAKV,MACtCM,KAAAA,KAAKH,MAAMM,YAAc,KAAKC,IAAI,KAAKP,OACvCG,KAAAA,KAAKC,QAAQE,YAAc,KAAKC,IAAI,KAAKN,MACzCE,KAAAA,KAAKE,QAAQC,YAAc,KAAKC,IAAI,KAAKL,QAelD,CAAA,IAAA,gBAbkB,MAAA,WACdM,cAAc,KAAKlB,YACdG,KAAAA,cAAgB,EAChBC,KAAAA,YAAY,KAAKD,eACjBE,KAAAA,sBAAsB,KAAKF,iBASpC,CAAA,IAAA,MANMgB,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAKrC,EAjDM3B,GAgDA4B,EAAiB,IAAI5B,EAAe,WAAY,uBACtD4B,EAAeC","file":"src.6b1e55b6.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n  constructor(selector, targetDate) {\r\n    this.selector = document.querySelector(selector);\r\n    this.targetDate = new Date(targetDate);\r\n  }\r\n\r\n  startCountdown() {\r\n    this.intervalId = setInterval(() => {\r\n      this.currentTime = new Date();\r\n      this.remainingTime = this.targetDate - this.currentTime;\r\n      this.timeCounter(), this.insertTimeIntoMarckup();\r\n      if (this.remainingTime < 0) {\r\n        this.stopCountdown();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  timeCounter() {\r\n    this.days = Math.floor(this.remainingTime / (1000 * 60 * 60 * 24));\r\n    this.hours = Math.floor((this.remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    this.mins = Math.floor((this.remainingTime % (1000 * 60 * 60)) / (1000 * 60));\r\n    this.secs = Math.floor((this.remainingTime % (1000 * 60)) / 1000);\r\n  }\r\n\r\n  insertTimeIntoMarckup() {\r\n    this.refs = {\r\n      days: document.querySelector(\" [data-value=days]\"),\r\n      hours: document.querySelector(\" [data-value=hours]\"),\r\n      minutes: document.querySelector(\" [data-value=mins]\"),\r\n      seconds: document.querySelector(\" [data-value=secs]\")\r\n    };\r\n    this.refs.days.textContent = this.pad(this.days);\r\n    this.refs.hours.textContent = this.pad(this.hours);\r\n    this.refs.minutes.textContent = this.pad(this.mins);\r\n    this.refs.seconds.textContent = this.pad(this.secs);\r\n  }\r\n  stopCountdown() {\r\n    clearInterval(this.intervalId);\r\n    this.remainingTime = 0;\r\n    this.timeCounter(this.remainingTime);\r\n    this.insertTimeIntoMarckup(this.remainingTime);\r\n  }\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, \"0\");\r\n  }\r\n}\r\n\r\nconst countdownTimer = new CountdownTimer(\"#timer-1\", \"May 25, 2021, 16:01\");\r\ncountdownTimer.startCountdown();"]}